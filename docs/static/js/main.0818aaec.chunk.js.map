{"version":3,"sources":["components/CategoryAdd.js","components/GiftGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFecthGifs.js","GiftExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","htmlFor","id","name","value","onChange","target","GiftGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAkCeA,EA/BY,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,uBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,UACI,uBAAOO,QAAQ,cAAf,8BACA,uBACIC,GAAG,cACHC,KAAK,cACLC,MAAQX,EACRY,SApBc,SAAET,GACxBF,EAAeE,EAAEU,OAAOF,UAqBpB,mD,QC3BCG,EAAe,SAAC,GAAwB,EAArBL,GAAsB,IAAlBM,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIvC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,W,uBCRCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,0FAE6EO,UAAWF,GAFxF,sBAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHrB,GAAIqB,EAAIrB,GACRM,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAaZY,GAbY,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAC1B,MAA0BtB,mBAAS,CAChC4B,KAAM,GACNO,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPjB,EAASC,GACRiB,MAAM,SAAAC,GAEHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAKlB,CAACb,IAEGc,EDjB0BK,CAAcnB,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACI,qCACI,mCAAOb,EAAP,OAEEa,GAAW,2CAEb,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIrB,aEiBzBgC,EA9BM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAIA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAIA,6BAEQ4C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCpBlCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0818aaec.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = ( e ) => { \r\n        setInputValue( e.target.value ) \r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <label htmlFor=\"newCategory\">Nueva categoria:</label>\r\n            <input \r\n                id=\"newCategory\" \r\n                name=\"newCategory\"\r\n                value={ inputValue}\r\n                onChange= { handleInputChange }\r\n            /> \r\n            <button> Agregar </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CategoryAdd;\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ( { id, title, url} ) => {\r\n    \r\n    // console.log( id, title, url )\r\n    \r\n    return (    \r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=0eSp7hKp9U3tvXcZAQJYIcfl3QnQ0ran&q=${ encodeURI( category ) }&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","// import React, { useState, useEffect } from 'react';\r\nimport { GiftGridItem } from './GiftGridItem';\r\nimport { useFecthGifs } from \"../hooks/useFecthGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFecthGifs( category );\r\n \r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n\r\n            <div className='card-grid'>    \r\n                {   \r\n                    images.map( img =>( \r\n                        <GiftGridItem \r\n                            key = { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFecthGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n       data: [],\r\n       loading: true\r\n    });\r\n    \r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n        .then( imgs => {\r\n                \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n        })\r\n        \r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n    // const categories = ['One punch', 'SAmurai X', 'Dragon ball'];\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n    // se tiene que crear un nuevo arreglo ya que si se modifica el que se pasa, se escribe el estado inicial.\r\n    // const handleAdd = () => { setcategories( [...categories, 'Perro Avisa XD'] )}\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <CategoryAdd setCategories={ setCategories }  />\r\n\r\n            <hr/>\r\n            \r\n            {/* <button onClick={ handleAdd }> Agregar </button> */}\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GiftExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}